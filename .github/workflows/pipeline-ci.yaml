name: CI/CD Pipeline
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
    Test:
      name: Unit Test
      runs-on: ubuntu-latest
      steps:
          - name: Code Clone
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
          - name: Setup Java JDK
            uses: actions/setup-java@v3
            with:
              java-version: '17'
              distribution: 'temurin'
          - name: Unit Test
            run: |
              mvn package test
    Analyze:
        name: SonarCloud Analyze
        needs: Test
        runs-on: ubuntu-latest
        steps:
            - name: Clonacion de Codigo
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Setup Java JDK
              uses: actions/setup-java@v3
              with:
                java-version: '17'
                distribution: 'temurin'
            - name: Run Tests with Coverage
              run: mvn clean verify
            - name: Cache SonarQube package
              uses: actions/cache@v4
              with:
                  path: ~/.sonar/cache
                  key: ${{ runner.os }}-sonar
                  restore-keys: ${{ runner.os }}-sonar
            - name: Cache Maven packages
              uses: actions/cache@v4
              with:
                  path: ~/.m2
                  key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-m2
            - name: Check Quality Gate
              run: |
                  STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
                    "https://sonarcloud.io/api/qualitygates/project_status?projectKey=cristian-aliaga_java-app" \
                    | jq -r '.projectStatus.status')
                  if [ "$STATUS" != "OK" ]; then
                    echo "Quality Gate failed: $STATUS"
                    exit 1
                  fi
            - name: Build and analyze
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=cristian-aliaga_java-app
    Build:
      name: Build and Push Docker Image
      needs: Analyze
      runs-on: ubuntu-latest
      steps:
          - name: Code Clone
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
          - name: Setup Java JDK
            uses: actions/setup-java@v3
            with:
              java-version: '17'
              distribution: 'temurin'
          - name: Compilation
            run: |
                  mvn package
          - name: Docker Login
            uses: docker/login-action@v3.1.0
            with: 
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_PASSWORD }}
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2.7.0
          - name: Docker Build
            run: |
              docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/repo-image:latest .
          - name: Docker Push
            run: |
              docker push ${{ secrets.DOCKERHUB_USERNAME }}/repo-image:latest
    Deploy:
        name: Deploy Container
        needs: Build
        runs-on: self-hosted
        steps:
            - name: Code Clone
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - name: Deploy Docker Container
              run: |
                    docker pull cristianaliaga/repo-image:latest
                    docker stop java-app || true
                    docker rm java-app || true
                    docker run -d --name java-app -p 8443:8443 cristianaliaga/repo-image:latest